nextflow_process {

    name "Test Process: METAPHLAN_METAPHLAN"
    script "../main.nf"
    process "METAPHLAN_METAPHLAN"

    tag "modules"
    tag "modules_local"
    tag "metaphlan"
    tag "metaphlan/makedb"
    tag "metaphlan/metaphlan"

    setup {
        run("METAPHLAN_MAKEDB") {
            script "../../makedb/main.nf"
            process {
                """
                input[0] = "mpa_vJan21_TOY_CHOCOPhlAnSGB_202103"
                """
            }
        }
    }


    test("fastq.gz + metaphlan_db") {

        when {
            process {
                """
                input[0] = Channel.of(
                    [
                        [ id: 'test' ],
                        [
                            file(params.modules_testdata_base_path + "genomics/prokaryotes/bacteroides_fragilis/illumina/fastq/test1_1.fastq.gz", checkIfExists: true),
                            file(params.modules_testdata_base_path + "genomics/prokaryotes/bacteroides_fragilis/illumina/fastq/test1_2.fastq.gz", checkIfExists: true)
                        ]
                    ]
                )
                input[1] = METAPHLAN_MAKEDB.out.db
                """
            }
        }

        then {
            assertAll (
                { assert process.success },
                { assert snapshot(
                    process.out.profile,
                    process.out.bt2out,
                    process.out.versions
                ).match() },
                { assert process.out.biom != null }
            )
        }
    }

    test("fastq.gz + metaphlan_db -stub ") {

        options "-stub"

        when {
            process {
                """
                input[0] = Channel.of(
                    [
                        [ id: 'test' ],
                        [
                            file(params.modules_testdata_base_path + "genomics/prokaryotes/bacteroides_fragilis/illumina/fastq/test1_1.fastq.gz", checkIfExists: true),
                            file(params.modules_testdata_base_path + "genomics/prokaryotes/bacteroides_fragilis/illumina/fastq/test1_2.fastq.gz", checkIfExists: true)
                        ]
                    ]
                )
                input[1] = METAPHLAN_MAKEDB.out.db
                """
            }
        }

        then {
            assertAll (
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }
}
